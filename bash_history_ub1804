sudo snap install htop
sudo chmod +x cuda_9.0.176_384.81_linux.run
./cuda_9.0.176_384.81_linux.run --override
sudo chmod +x cuda_9.0.176.1_linux.run
sudo chmod +x cuda_9.0.176.2_linux.run 
./cuda_9.0.176.1_linux.run 
sudo sh cuda_9.0.176.2_linux.run 
cd Downloads/
tar -xzvf cudnn-9.0-linux-x64-v7.tgz 
sudo cp cuda/include/cudnn.h  /usr/local/cuda/include
sudo cp cuda/lib64/libcudnn*  /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h
sudo chmod a+r /usr/local/cuda/lib64/libcudnn*
sudo apt-get install libcupti-dev
sudo apt-get install python3-pip python3-dev python-virtualenv
pip install virtualenvwrapper
sudo apt install net-tools
sudo apt-get update 
sudo apt update
sudo apt install -y git automake build-essential pkg-config libevent-dev libncurses5-dev
# end virtualenv
sudo apt-get -y install vim 
sudo apt -y install xclip xsel
sudo apt install tmux
# tmux
git clone https://github.com/gpakosz/.tmux.git
ln -s -f .tmux/.tmux.conf
cp .tmux/.tmux.conf.local .
# end tmux
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt update && sudo apt install sublime-text
rm .tmux.conf.local 
nano .tmux.conf.local
#vim
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
#copy into .vimrc first from vimsettings_v1.txt
touch .vimrc
# get monokai color
git clone https://github.com/sickill/vim-monokai
mkdir .vim/colors/
cp vim-monokai/colors/monokai.vim .vim/colors/
# end monokai
nano .vimrc 
echo ". ~/.bash_prompt.sh" >> ~/.bashrc
nano .bashrc
source .bashrc
vim +PluginInstall +qall
workon konbini_detector
pip3 install --upgrade tensorflow-gpu
pip install pandas jupyter notebook jupyterlab
pip install keras
source .bashrc
find / -name "libcublas.so.9.0" 2>&1 | grep -v "Permission denied"
cat .bash_history 
vi .bash_history 
exit
sudo snap install htop
sudo chmod +x cuda_9.0.176_384.81_linux.run
./cuda_9.0.176_384.81_linux.run --override
sudo chmod +x cuda_9.0.176.1_linux.run
sudo chmod +x cuda_9.0.176.2_linux.run 
./cuda_9.0.176.1_linux.run 
sudo sh cuda_9.0.176.2_linux.run 
cd Downloads/
tar -xzvf cudnn-9.0-linux-x64-v7.tgz 
sudo cp cuda/include/cudnn.h  /usr/local/cuda/include
sudo cp cuda/lib64/libcudnn*  /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h
sudo chmod a+r /usr/local/cuda/lib64/libcudnn*
sudo apt-get install libcupti-dev
sudo apt-get install python3-pip python3-dev python-virtualenv
pip install virtualenvwrapper
sudo apt install net-tools
sudo apt-get update 
sudo apt update
sudo apt install -y git automake build-essential pkg-config libevent-dev libncurses5-dev
# end virtualenv
sudo apt-get -y install vim 
sudo apt -y install xclip xsel
sudo apt install tmux
# tmux
git clone https://github.com/gpakosz/.tmux.git
ln -s -f .tmux/.tmux.conf
cp .tmux/.tmux.conf.local .
# end tmux
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt update && sudo apt install sublime-text
rm .tmux.conf.local 
nano .tmux.conf.local
#vim
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
#copy into .vimrc first from vimsettings_v1.txt
touch .vimrc
# get monokai color
git clone https://github.com/sickill/vim-monokai
mkdir .vim/colors/
cp vim-monokai/colors/monokai.vim .vim/colors/
# end monokai
nano .vimrc 
echo ". ~/.bash_prompt.sh" >> ~/.bashrc
nano .bashrc
source .bashrc
vim +PluginInstall +qall
workon konbini_detector
pip3 install --upgrade tensorflow-gpu
pip install pandas jupyter notebook jupyterlab
pip install keras
source .bashrc
find / -name "libcublas.so.9.0" 2>&1 | grep -v "Permission denied"
cat .bash_history 
vi .bash_history 
exit
cat .bash_history 
history
cp .bash_history dotfiles/bash_history_ub1804
cd dotfiles/
git add .
git commit -am "add bash history"
git push
cd
mkdir tensorflow
cd tensorflow/
git clone https://github.com/tensorflow/models
cd Dow
cd
cd Downloads/
cd
cd Proj/
ls
cd
cd Downloads/
unzip protoc-3.5.1-linux-x86_64.zip 
rm -rf bin/
rm -rf include/
unzip protoc-3.5.1-linux-x86_64.zip -d protoc3
sudo mv protoc3/bin/* /usr/local/bin/
sudo mv protoc3/include/* /usr/local/include/
sudo chown $USER /usr/local/bin/protoc 
sudo chown -R $USER /usr/local/include/google
cd
cd tensorflow/models/research/
cd
workon konbini_detector
pip install Cython
pip install Cython pillow lxml matplotlib
cd
deactivate
git clone https://github.com/cocodataset/cocoapi.git
cd cocoapi/PythonAPI
make
pip install numpy
workon konbini_detector
cd
cd cocoapi/PythonAPI/
ls
make
cp -r pycocotools/ ~/tensorflow/models/research/
cd
cd tensorflow/models/research/
protoc object_detection/protos/*.proto --python_out=.
cd
vi .bashrc
source .bashrc
cd tensorflow/models/research/
python
python object_detection/builders/model_builder_test.py 
cd
deactivate
lsvirtualenv 
tmux
poweroff --help
sudo poweroff
sudo apt install docker.io
sudo docker
sudo docker run hello-world
docker --version
sudo systemctl start docker
sudo systemctl enable docker
tmux a
tmux ls
docker --version
mkdir .ipython
cd .ipython/
mkdir profile_default
cd profile_default/
vi ipython_config.py
exit
cd dotfiles/
ls
cd
cd dotfiles/.ipython/profile_default/
ls
cat ipython_config.py 
rm ipython_config.py 
cp ~/.ipython/profile_default/ipython_config.py .
ls
cat ipython_config.py 
cd 
cd dotfiles/
git status
git add .
git commit -am "ipython config interactivity shell = 'all'"
git push
cd
cd dotfiles/
cp ~/.bash_prompt.sh .
rm .bash_prompt.sh 
cp ~/.bash_prompt.sh .
mv .bash_prompt.sh bash_prompt.sh
ls
rm ._setup_instructions.sh 
vi setup_instructions.sh
git status
git add .
git commit -am "bash prompt"
git push
vi setup_instructions.sh
cat setupbash.txt 
rm setupbash.txt 
nano setup_instructions.sh
git add .
git commit -am "bash environment setup instructions"
git push
git status
exit
ls
ls -a
cd ko
cd Proj/konbini_detector/
git status
vi README.md 
git add .
git status
git commit -am "readme"
git push
exit
cd dotfiles/
ls
ls -a
ls -al
cd .ipython/
ls
cd profile_default/
ls
cat ipython_config.py 
cd
ls
ipython
workon konbini_detector
jupyter notebook
ipython
jupyter notebook
cd
tmux ls
tmux
exit
sudo reboot
mkproject emojifier
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/adsasmita/emojifier.git
git push
git push --help
git push -u origin master
ls
echo "# emojifier" >> README.md
ls
git reset --hard
git remove
git add .
git status
git commit -am "first commit"
git log
git remote add origin https://github.com/adsasmita/emojifier.git
git push -u origin master
vi README.md 
ls
cd
cd Desktop/
ls
cd from_backup/
ls
cd deeplearningai/
ls
cd rnn/week2/emojify/
ls
ls -lart
ls -la
ls -lar
ls -lart
ls -lat
ls -lart
ls --help
ls -lart
ls -lat
ln -s . ~/emojify
cd
ls
cd emojify
ls
cat emojify
cd emojify
ls
cd emojify
ls
cd
cd Desktop/from_backup/deeplearningai/rnn/week2/emojify/
ls
echo CDPATH
echo $CDPATH
cd
mkdir symlinks
ln -s ~/Desktop/from_backup/deeplearningai/rnn/week2/emojify ~/symlinks/emojify
ls
ls -al
rm emojify
ls
export CDPATH=~/symlinks
cd symlinks/
ls
cd
cd emojify
ls
cd
vi .bashrc
cp .bashrc dotfiles/bashrc
cd dotfiles/
ls -lat
git status
git commit -am "bashrc 1804"
git push
cd emojify
ls
cp emo_utils.py ~/Proj/emojifier/
cd 
cd Proj/emojifier/
ls
git add .
git commit -am "emo utils"
git push
ls
workon emojifier
git status
ls
cd data/
ls
cd ..
git add .
cd data/
ls -lart
ls -thral
ls -thal
rm glove.6B.50d.txt 
ls
cd ..
git add .
ls
git status
git commit -am "add dataset"
git push
deactivate
cd
workon konbini_detector
ls
jupyter notebook
git status
git add .
git status
git commit -am "SSD MobileNet v1 pipeline"
git push
jupyter notebook
git status
git add .
git commit "Edit model pipelines"
git push
git status
git add .
git status
git log
git status
git commit -am "Edit model pipelines"
git push
cd
cd emojify/
ls
ls -lat
cd images/
ls
cd ..
cd data/
ls
cd ..
cp -r data/ ~/Proj/emojifier/
tmux ls
tmux
tmux kill-session
sudo poweroff
nvidia-smi
sudo poweroff
workon emojifier
ls
git add .
git commit -am "add emojifier"
git push
cd
history >> "lol.txt"
vi lol.txt 
rm lol.txt 
history >> dotfiles/bash_history_ub1804 
cd dotfiles/
vi bash_history_ub1804 
echo history
history
history | cut -c 8-
history | cut -c 8- >> bash_history_ub1804 
